apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: testbc
  spec:
    nodeSelector: null
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Parallel
    source:
      git:
        uri: example.org
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: integratedregistry
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: 172.30.1.1:5000/exporttest-2374/integratedregistry
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: postgresql
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: centos/postgresql-95-centos7
      generation: 1
      importPolicy: {}
      name: "9.5"
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: 172.30.1.1:5000/exporttest-2374/postgresql
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 2
    name: testdc
  spec:
    replicas: 1
    selector:
      a: b
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          a: b
      spec:
        containers:
        - env:
          - name: ENV1
            value: VAL1
          image: registry:8080/repo1:ref1
          imagePullPolicy: IfNotPresent
          name: container1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: registry:8080/repo1:ref2
          imagePullPolicy: IfNotPresent
          name: container2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status:
    availableReplicas: 0
    conditions:
    - lastTransitionTime: 2017-08-08T17:01:12Z
      lastUpdateTime: 2017-08-08T17:01:12Z
      message: Deployment config does not have minimum availability.
      status: "False"
      type: Available
    - lastTransitionTime: 2017-08-08T17:01:12Z
      lastUpdateTime: 2017-08-08T17:01:12Z
      message: Created new replication controller "testdc-1" for version 1
      reason: NewReplicationControllerCreated
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  data:
    .dockercfg: eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsiYXV0aCI6ICJabTl2T21KaGNnbz0iLCAiZW1haWwiOiAiIn19
  kind: Secret
  metadata:
    creationTimestamp: null
    name: dockerbuildsecret
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    bar: YmFy
    foo: Zm9v
  kind: Secret
  metadata:
    creationTimestamp: null
    name: testsecret
  type: Opaque
- apiVersion: v1
  imagePullSecrets:
  - name: dockerbuildsecret
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: builder
  secrets:
  - name: builder-token-kpgsc
  - name: builder-dockercfg-n7l7l
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: default
  secrets:
  - name: default-token-d9m62
  - name: default-dockercfg-tkdpr
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: deployer
  secrets:
  - name: deployer-token-47tk8
  - name: deployer-dockercfg-n319n
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: testserviceaccount
  secrets:
  - name: testserviceaccount-token-fmxrc
  - name: testserviceaccount-dockercfg-1l7mf
kind: List
metadata: {}
